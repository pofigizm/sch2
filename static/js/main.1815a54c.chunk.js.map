{"version":3,"sources":["Buttons.js","Timer.js","Tasks.js","Trial.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","display","marginLeft","button","margin","spacing","unit","marginRight","width","input","_ref","_ref$onPress","onPress","stage","classes","react_default","a","createElement","className","Button_default","variant","color","onClick","zero","dig","slice","humanTime","seconds","sec","hours","min","concat","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleButton","onNextStage","state","timer","window","setInterval","setState","clearInterval","Paper_default","elevation","Typography_default","component","src_Buttons","React","Component","objectSpread","mixins","gutters","paddingTop","paddingBottom","position","top","left","backgroundColor","zIndex","Tasks","_this$props","tasks","tasksClass","map","task","key","id","dangerouslySetInnerHTML","__html","content","renderInput","_this$props2","answers","onSolved","onAnswer","current","value","onChange","ev","target","PureComponent","Try","handleNextStage","time","timeHard","onFinish","timeSimple","handleSolved","findIndex","t","handleAnswer","defineProperty","src_Timer","src_Tasks_0","read","JSON","parse","localStorage","getItem","save","data","arguments","length","undefined","setItem","stringify","generate","arr","res","toConsumableArray","i","j","Math","floor","random","shuffle","values","filter","hard","solved","App","tasksData","handleSolve","ix","_this$state","curIds","nextTask","includes","next","handleStart","max","apply","trials","ts","Date","now","handleFinish","_this$state2","trial","console","log","src_Trial","toString","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1815a54c.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    marginLeft: 30,\n  },\n \tbutton: {\n    \tmargin: theme.spacing.unit,\n    \tmarginLeft: 0,\n    \tmarginRight: 20,\n    \twidth: 120,\n \t},\n  \tinput: {\n    \tdisplay: 'none',\n  \t},\n});\n\n\nfunction Buttons({\n\tonPress = () => {},\t\n\tstage,\n\tclasses,\n}) {\n\treturn (\n    <div className={classes.root}>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n        onClick={() => onPress('s')}\n        className={classes.button}\n      >\n        {stage} - {stage ? 'next' : 'start'}\n      </Button>\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(Buttons)\n","import React from 'react'\nimport Buttons from './Buttons'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n\troot: {\n   \t\t...theme.mixins.gutters(),\n   \t\tpaddingTop: theme.spacing.unit * 2,\n   \t\tpaddingBottom: theme.spacing.unit * 2,\n   \t\twidth: 350,\n      display: 'flex',\n      position: 'fixed',\n      top: 10,\n      left: 'calc(50% - 175px)',\n      backgroundColor: 'white',\n      zIndex: 100,\n  \t},\n})\n\nconst zero = (dig) => ('0' + dig).slice(-2)\nconst humanTime = (seconds) => {\n  let sec = seconds\n\n  const hours = sec / 3600 | 0\n  sec = sec - hours * 3600\n  const min = sec / 60 | 0\n  sec = sec - min * 60\n\n  return `${zero(hours)}:${zero(min)}:${zero(sec)}`\n}\n\nclass Timer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tsec: 0\n\t\t}\n\n\t\tthis.timer = window.setInterval(() => {\n\t\t\tif (this.props.stage) {\n\t\t\t\tconst sec = this.state.sec + 1\n\t\t\t\tthis.setState({ sec })\n\t\t\t} \n\t\t}, 1000);\n\t}\n\n  componentWillUnmount() {\n    window.clearInterval(this.timer)\n  }\n\n\trender() {\n    const { stage } = this.props\n\t\tlet { sec } = this.state\n\n\t\tconst { classes } = this.props\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper className={classes.root} elevation={5}>\n\t\t\t\t\t<Typography \n\t\t\t\t\t\tvariant=\"h3\" \n\t\t\t\t\t\tcomponent=\"h3\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{humanTime(sec)}\n\t\t\t\t\t</Typography>\t\t\t\t\n\t\t\t\t\t<Buttons\n\t\t\t\t\t\tstage={stage} \n\t\t\t\t\t\tonPress={this.handleButton}\n\t\t\t\t\t/>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t)\n\t}\n\n\thandleButton = () => {\n    const { onNextStage } = this.props;\n\n    onNextStage(humanTime(this.state.sec))\n\t}\n}\n\nexport default withStyles(styles)(Timer);\n","import React from 'react'\nimport './Tasks.css'\n\nclass Tasks extends React.PureComponent {\n  render() {\n    const { stage, tasks } = this.props\n    const tasksClass = stage === 0 ? 'tasks blur' : 'tasks'\n\n    return (\n      <ol className={tasksClass} >\n        { tasks\n          .map(task => (\n          <li key={task.id}>\n            <span dangerouslySetInnerHTML={{ __html: task.content }} />\n            { this.renderInput(task.id) }\n          </li>\n        )) }\n      </ol>\n    )\n  }\n\n  renderInput(id) {\n    const { answers, onSolved, onAnswer } = this.props\n    const current = answers[id] || ''\n\n    return (\n      <div className=\"input\">\n        <input value={ current } onChange={ (ev) => onAnswer(id, ev.target.value) } />\n        <button onClick={ () => onSolved(id) }>Solved</button>\n      </div>\n    )\n  }\n}\n\nexport default Tasks\n","import React from 'react'\nimport Timer from './Timer'\nimport Tasks from './Tasks'\nimport './Trial.css'\n\nclass Try extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      answers: {},\n      timeSimple: 0,\n      timeHard: 0,\n\n      stage: 0,\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"try\">\n        <Timer \n          stage={this.state.stage}\n          onNextStage={this.handleNextStage}\n        />\n        <Tasks\n          stage={this.state.stage}\n          tasks={this.props.tasks}\n          answers={this.state.answers}\n          onSolved={this.handleSolved}\n          onAnswer={this.handleAnswer}\n        />\n      </div>\n    )\n  }\n\n  handleNextStage = (time) => {\n    const { stage } = this.state\n\n    if (stage === 0) {\n      this.setState({\n        stage: 1,\n      })\n      return\n    }\n\n    if (stage === 1) {\n      this.setState({\n        stage: 2,\n        timeSimple: time,\n      })\n      return\n    }\n\n    this.setState({\n      timeHard: time,\n    }, () => {\n      this.props.onFinish({\n        id: this.props.id,\n        ...this.state\n      })\n    })\n  }\n\n  handleSolved = (id) => {\n    const { tasks, onSolved } = this.props\n    const ix = tasks.findIndex(t => t.id === id)\n  \n    onSolved(ix)\n  }\n\n  handleAnswer = (id, value) => {\n    this.setState({\n      answers: {\n        ...this.state.answers,\n        [id]: value,\n      }\n    })\n  }\n}\n\nexport default Try\n","import React from 'react'\nimport Trial from './Trial'\nimport tasksData from './tasks.json'\nimport './App.css'\n\nconst KEY = 'SCH2'\nconst read = () => {\n  return JSON.parse(localStorage.getItem(KEY))\n}\n\nconst save = (data = {}) => {\n  return localStorage.setItem(KEY, JSON.stringify(data))\n}\n\nconst shuffle = arr => {\n  const res = [...arr]\n  for (let i = res.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [res[i], res[j]] = [res[j], res[i]];\n  }\n  return res\n}\n\nconst generate = tasks => {\n  const all = Object.values(tasks)\n\n  return shuffle(all.filter(t => t.hard && !t.solved)).slice(0, 10)\n}\n\nclass App extends React.PureComponent {\n  state = {\n    ...(read() || tasksData),\n    current: null,\n  }\n\n  render() {\n    const { current } = this.state\n\n    return (\n      <div className=\"app\">\n \n        { current && (\n          <Trial\n            id={current.id}\n            tasks={current.tasks}\n            onSolved={this.handleSolve}\n            onFinish={this.handleFinish}\n          />\n        ) }\n\n        { !current && (\n          <div>\n            <ul>\n              { (this.state.trials || []).map(trial => (\n                <li key={trial.id}>\n                  {trial.id}: {(new Date(trial.ts)).toString()} \n                </li>\n              )) }\n            </ul>\n            <button className=\"newButton\" onClick={this.handleStart}> Новое </button>\n          </div>\n        ) }\n          \n      </div>\n    )\n  }\n\n  handleSolve = (ix) => {\n    const { tasks, current } = this.state\n    const task = current.tasks[ix]\n    const curIds = current.tasks.map(t => t.id)\n    const nextTask = generate(tasks).filter(t => !curIds.includes(t.id))[0] || {}\n    const next = [ ...current.tasks ]\n    next[ix] = nextTask\n\n    this.setState({\n      tasks: {\n        ...tasks,\n        [task.id]: {\n          ...task,\n          solved: true,\n        },\n      },\n      current: {\n        ...current,\n        tasks: next,\n      },\n    })\n  }\n\n  handleStart = () => {\n    const tasks = generate(this.state.tasks)\n    const id = Math.max(...(this.state.trials || [{ id: 0 }]).map(t => t.id)) + 1\n    const ts = Date.now()\n\n    this.setState({\n      current: {\n        id,\n        ts,\n        tasks,\n      },\n    })\n  }\n\n  handleFinish = (data) => {\n    const { current, trials } = this.state\n    const trial = { ...current, ...data }\n    this.setState({\n      current: null,\n      trials: [ ...(trials || []), trial ],\n    }, () => {\n      console.log(this.state)\n      save(this.state)\n    })\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}