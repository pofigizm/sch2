{"version":3,"sources":["Buttons.js","Timer.js","Tasks.js","Trial.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","display","marginLeft","button","margin","spacing","unit","marginRight","width","input","_ref","_ref$onPress","onPress","stage","classes","react_default","a","createElement","className","Button_default","variant","color","onClick","zero","dig","slice","humanTime","seconds","sec","hours","min","concat","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleButton","onNextStage","state","timer","window","setInterval","setState","clearInterval","Paper_default","elevation","Typography_default","component","src_Buttons","React","Component","objectSpread","mixins","gutters","paddingTop","paddingBottom","position","top","left","backgroundColor","zIndex","btnClass","cur","arguments","length","undefined","ref","contentClass","Tasks","_this$props","tasks","complexity","map","task","key","id","dangerouslySetInnerHTML","__html","content","renderInput","renderButtons","_this$props2","onComplexity","current","_this$props3","answers","onAnswer","value","onChange","ev","target","PureComponent","Try","handleNextStage","time","timeHard","onFinish","timeSimple","timeComplexity","handleComplexity","defineProperty","handleAnswer","src_Timer","src_Tasks_0","read","JSON","parse","localStorage","getItem","save","data","setItem","stringify","shuffle","arr","res","toConsumableArray","i","j","Math","floor","random","generate","all","values","easy","filter","t","hard","list","extraHard","App","tasksData","handleStart","max","apply","trials","ts","Date","now","handleFinish","_this$state","trial","console","log","src_Trial","toString","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1190702d.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    marginLeft: 30,\n  },\n \tbutton: {\n    \tmargin: theme.spacing.unit,\n    \tmarginLeft: 0,\n    \tmarginRight: 20,\n    \twidth: 120,\n \t},\n  \tinput: {\n    \tdisplay: 'none',\n  \t},\n});\n\n\nfunction Buttons({\n\tonPress = () => {},\t\n\tstage,\n\tclasses,\n}) {\n\treturn (\n    <div className={classes.root}>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n        onClick={() => onPress('s')}\n        className={classes.button}\n      >\n        {stage} - {stage ? 'next' : 'start'}\n      </Button>\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(Buttons)\n","import React from 'react'\nimport Buttons from './Buttons'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n\troot: {\n   \t\t...theme.mixins.gutters(),\n   \t\tpaddingTop: theme.spacing.unit * 2,\n   \t\tpaddingBottom: theme.spacing.unit * 2,\n   \t\twidth: 350,\n      display: 'flex',\n      position: 'fixed',\n      top: 10,\n      left: 'calc(50% - 175px)',\n      backgroundColor: 'white',\n      zIndex: 100,\n  \t},\n})\n\nconst zero = (dig) => ('0' + dig).slice(-2)\nconst humanTime = (seconds) => {\n  let sec = seconds\n\n  const hours = sec / 3600 | 0\n  sec = sec - hours * 3600\n  const min = sec / 60 | 0\n  sec = sec - min * 60\n\n  return `${zero(hours)}:${zero(min)}:${zero(sec)}`\n}\n\nclass Timer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tsec: 0\n\t\t}\n\n\t\tthis.timer = window.setInterval(() => {\n\t\t\tif (this.props.stage) {\n\t\t\t\tconst sec = this.state.sec + 1\n\t\t\t\tthis.setState({ sec })\n\t\t\t} \n\t\t}, 1000);\n\t}\n\n  componentWillUnmount() {\n    window.clearInterval(this.timer)\n  }\n\n\trender() {\n    const { stage } = this.props\n\t\tlet { sec } = this.state\n\n\t\tconst { classes } = this.props\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper className={classes.root} elevation={5}>\n\t\t\t\t\t<Typography \n\t\t\t\t\t\tvariant=\"h3\" \n\t\t\t\t\t\tcomponent=\"h3\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{humanTime(sec)}\n\t\t\t\t\t</Typography>\t\t\t\t\n\t\t\t\t\t<Buttons\n\t\t\t\t\t\tstage={stage} \n\t\t\t\t\t\tonPress={this.handleButton}\n\t\t\t\t\t/>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t)\n\t}\n\n\thandleButton = () => {\n    const { onNextStage } = this.props;\n\n    onNextStage(humanTime(this.state.sec))\n\t}\n}\n\nexport default withStyles(styles)(Timer);\n","import React from 'react'\nimport './Tasks.css'\n\nconst btnClass = (cur = null, ref) => {\n  if (cur === null) {\n    return 'none'\n  }\n\n  if (cur === ref) {\n    return ref ? 'green' : 'red'\n  }\n\n  return 'gray'\n}\n\nconst contentClass = (stage, cur) => {\n  if ((stage === 0) || (stage === 2 && !cur) || (stage === 3 && cur)) {\n    return 'blur'\n  }\n\n  return ''\n}\n\nclass Tasks extends React.PureComponent {\n  render() {\n    const { stage, tasks, complexity } = this.props\n\n    return (\n      <ol className=\"tasks\" >\n        { tasks\n          .map(task => (\n          <li key={task.id}>\n            <span \n              className={ contentClass(stage, complexity[task.id]) }\n              dangerouslySetInnerHTML={{ __html: task.content }}\n            />\n            { stage > 1 ? this.renderInput(task.id) : this.renderButtons(task.id) }\n          </li>\n        )) }\n      </ol>\n    )\n  }\n\n  renderButtons(id) {\n    const { stage, complexity, onComplexity } = this.props\n    const current = complexity[id]\n\n    if (stage === 0) {\n      return (\n        <div className=\"buttons\" />\n      )\n    }\n\n    return (\n      <div className=\"buttons\">\n        <button className={ btnClass(current, true) } onClick={ () => onComplexity(id, true) }>Легко</button>\n        <button className={ btnClass(current, false) } onClick={ () => onComplexity(id, false) }>Сложно</button>\n      </div>\n    )\n  }\n\n  renderInput(id) {\n    const { stage, complexity, answers, onAnswer } = this.props\n    const current = answers[id] || ''\n\n    if ((stage === 2 && !complexity[id]) || (stage === 3 && complexity[id])) {\n      return (\n        <div className=\"input\" />\n      )\n    }\n\n    return (\n      <div className=\"input\">\n        <input value={ current } onChange={ (ev) => onAnswer(id, ev.target.value) } />\n      </div>\n    )\n  }\n}\n\nexport default Tasks\n","import React from 'react'\nimport Timer from './Timer'\nimport Tasks from './Tasks'\nimport './Trial.css'\n\nclass Try extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      complexity: {},\n      timeComplexity: 0,\n\n      answers: {},\n      timeSimple: 0,\n      timeHard: 0,\n\n      stage: 0,\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"try\">\n        <Timer \n          stage={this.state.stage}\n          onNextStage={this.handleNextStage}\n        />\n        <Tasks\n          stage={this.state.stage}\n          tasks={this.props.tasks}\n          complexity={this.state.complexity}\n          answers={this.state.answers}\n          onComplexity={this.handleComplexity}\n          onAnswer={this.handleAnswer}\n        />\n      </div>\n    )\n  }\n\n  handleNextStage = (time) => {\n    const { stage } = this.state\n\n    if (stage === 0) {\n      this.setState({\n        stage: 1,\n      })\n      return\n    }\n\n    if (stage === 1) {\n      this.setState({\n        stage: 2,\n        timeComplexity: time,\n      })\n      return\n    }\n\n    if (stage === 2) {\n      this.setState({\n        stage: 3,\n        timeSimple: time,\n      })\n      return\n    }\n\n    this.setState({\n      timeHard: time,\n    }, () => {\n      this.props.onFinish(this.props.id, {\n        id: this.props.id,\n        ...this.state\n      })\n    })\n  }\n\n  handleComplexity = (id, value) => {\n    this.setState({\n      complexity: {\n        ...this.state.complexity,\n        [id]: value,\n      }\n    })\n  }\n\n  handleAnswer = (id, value) => {\n    this.setState({\n      answers: {\n        ...this.state.answers,\n        [id]: value,\n      }\n    })\n  }\n}\n\nexport default Try\n","import React from 'react'\nimport Trial from './Trial'\nimport tasksData from './tasks.json'\nimport './App.css'\n\nconst KEY = 'SCH2'\nconst read = () => {\n  return JSON.parse(localStorage.getItem(KEY))\n}\n\nconst save = (data = {}) => {\n  return localStorage.setItem(KEY, JSON.stringify(data))\n}\n\nconst shuffle = arr => {\n  const res = [...arr]\n  for (let i = res.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [res[i], res[j]] = [res[j], res[i]];\n  }\n  return res\n}\n\nconst generate = tasks => {\n  const all = Object.values(tasks)\n\n  const easy = all.filter(t => !t.hard && t.list > 5)\n  const hard = all.filter(t => t.hard && t.list < 12)\n  const extraHard = all.filter(t => t.hard && t.list > 11)\n\n  const res = []\n    .concat(shuffle(easy).slice(0, 1))\n    .concat(shuffle(hard).slice(0, 8))\n    .concat(shuffle(extraHard).slice(0, 1))\n  \n  return shuffle(res)\n}\n\nclass App extends React.PureComponent {\n  state = {\n    ...(read() || tasksData),\n    current: null,\n  }\n\n  render() {\n    const { current } = this.state\n\n    return (\n      <div className=\"app\">\n \n        { current && (\n          <Trial\n            id={current.id}\n            tasks={current.tasks}\n            onFinish={this.handleFinish}\n          />\n        ) }\n\n        { !current && (\n          <div>\n            <ul>\n              { (this.state.trials || []).map(trial => (\n                <li key={trial.id}>\n                  {trial.id}: {(new Date(trial.ts)).toString()} \n                </li>\n              )) }\n            </ul>\n            <button className=\"newButton\" onClick={this.handleStart}> Новое </button>\n          </div>\n        ) }\n          \n      </div>\n    )\n  }\n\n  handleStart = () => {\n    const tasks = generate(this.state.tasks)\n    const id = Math.max(...(this.state.trials || [{ id: 0 }]).map(t => t.id)) + 1\n    const ts = Date.now()\n\n    this.setState({\n      current: {\n        id,\n        ts,\n        tasks,\n      },\n    })\n  }\n\n  handleFinish = (id, data) => {\n    const { current, trials } = this.state\n    const trial = { ...current, ...data }\n    this.setState({\n      current: null,\n      trials: [ ...(trials || []), trial ],\n    }, () => {\n      console.log(this.state)\n      save(this.state)\n    })\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}