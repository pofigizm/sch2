{"version":3,"sources":["Buttons.js","Timer.js","Tasks.js","Trial.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","display","marginLeft","button","margin","spacing","unit","marginRight","width","input","_ref","_ref$onPress","onPress","stage","classes","react_default","a","createElement","className","Button_default","variant","color","onClick","zero","dig","slice","humanTime","seconds","sec","hours","min","concat","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleButton","_this$props","onNextStage","onClose","state","timer","window","setInterval","setState","clearInterval","Paper_default","elevation","Typography_default","component","src_Buttons","React","Component","objectSpread","mixins","gutters","paddingTop","paddingBottom","position","top","left","backgroundColor","zIndex","Tasks","tasks","tasksClass","map","task","key","id","dangerouslySetInnerHTML","__html","content","renderInput","problem","_this$props2","answers","onSolved","onProblem","onAnswer","current","value","onChange","ev","target","disabled","PureComponent","Try","handleNextStage","time","timeHard","onFinish","timeSimple","handleClose","onHide","handleSolved","findIndex","t","handleProblem","handleAnswer","defineProperty","_this$state","src_Timer","src_Tasks_0","read","JSON","parse","localStorage","getItem","save","data","arguments","length","undefined","setItem","stringify","generate","all","values","filter","solved","arr","res","toConsumableArray","i","j","Math","floor","random","shuffle","hard","URLSearchParams","location","search","get","App","version","tasksData","handleShow","trial","handleHide","handleSolve","ix","curIds","nextTask","includes","next","_this$state2","handleStart","max","apply","trials","ts","Date","now","handleFinish","_this$state3","console","log","handleDowndload","dataStr","encodeURIComponent","downloadAnchorNode","document","setAttribute","body","appendChild","click","remove","_this2","src_Trial","toString","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.078d3f2b.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    marginLeft: 30,\n  },\n \tbutton: {\n    \tmargin: theme.spacing.unit,\n    \tmarginLeft: 0,\n    \tmarginRight: 20,\n    \twidth: 120,\n \t},\n  \tinput: {\n    \tdisplay: 'none',\n  \t},\n});\n\n\nfunction Buttons({\n\tonPress = () => {},\t\n\tstage,\n\tclasses,\n}) {\n\treturn (\n    <div className={classes.root}>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n        onClick={() => onPress('s')}\n        className={classes.button}\n      >\n        {stage} - { stage === 0 ? 'start' : (stage === 3 ? 'close' : 'next') }\n      </Button>\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(Buttons)\n","import React from 'react'\nimport Buttons from './Buttons'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n\troot: {\n   \t\t...theme.mixins.gutters(),\n   \t\tpaddingTop: theme.spacing.unit * 2,\n   \t\tpaddingBottom: theme.spacing.unit * 2,\n   \t\twidth: 350,\n      display: 'flex',\n      position: 'fixed',\n      top: 10,\n      left: 'calc(50% - 175px)',\n      backgroundColor: 'white',\n      zIndex: 100,\n  \t},\n})\n\nconst zero = (dig) => ('0' + dig).slice(-2)\nconst humanTime = (seconds) => {\n  let sec = seconds\n\n  const hours = sec / 3600 | 0\n  sec = sec - hours * 3600\n  const min = sec / 60 | 0\n  sec = sec - min * 60\n\n  return `${zero(hours)}:${zero(min)}:${zero(sec)}`\n}\n\nclass Timer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tsec: props.sec || 0,\n\t\t}\n\n\t\tthis.timer = window.setInterval(() => {\n      const { stage } = this.props\n\t\t\tif (stage > 0 && stage < 3) {\n\t\t\t\tconst sec = this.state.sec + 1\n\t\t\t\tthis.setState({ sec })\n\t\t\t} \n\t\t}, 1000);\n\t}\n\n  componentWillUnmount() {\n    window.clearInterval(this.timer)\n  }\n\n\trender() {\n    const { stage } = this.props\n\t\tlet { sec } = this.state\n\n\t\tconst { classes } = this.props\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Paper className={classes.root} elevation={5}>\n\t\t\t\t\t<Typography \n\t\t\t\t\t\tvariant=\"h3\" \n\t\t\t\t\t\tcomponent=\"h3\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{humanTime(sec)}\n\t\t\t\t\t</Typography>\n          <Buttons\n            stage={stage} \n            onPress={this.handleButton}\n          />\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t)\n\t}\n\n\thandleButton = () => {\n    const { stage, onNextStage, onClose } = this.props;\n\n    if (stage === 3) {\n      onClose()\n      return\n    }\n\n    onNextStage(humanTime(this.state.sec), this.state.sec)\n\t}\n}\n\nexport default withStyles(styles)(Timer);\n","import React from 'react'\nimport './Tasks.css'\n\nclass Tasks extends React.PureComponent {\n  render() {\n    const { stage, tasks } = this.props\n    const tasksClass = stage === 0 ? 'tasks blur' : 'tasks'\n\n    return (\n      <ol className={tasksClass} >\n        { tasks\n          .map(task => (\n          <li key={task.id}>\n            <span dangerouslySetInnerHTML={{ __html: task.content }} />\n            { this.renderInput(task.id, task.problem) }\n          </li>\n        )) }\n      </ol>\n    )\n  }\n\n  renderInput(id, problem) {\n    const { stage, answers, onSolved, onProblem, onAnswer } = this.props\n    const current = answers[id] || ''\n\n    return (\n      <div className=\"input\">\n        <input value={ current } onChange={ (ev) => onAnswer(id, ev.target.value) } />\n        <div className=\"buttons\" >\n          <button\n            className={stage === 3 ? '' : 'green'}\n            disabled={stage === 3}\n            onClick={ () => onSolved(id) }\n          >\n            Solved\n          </button>\n          <button\n            className={(stage < 2 || problem) ? '' : 'red'}\n            disabled={(stage < 2 || problem)}\n            onClick={ () => onProblem(id) }\n          >\n            Problem\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tasks\n","import React from 'react'\nimport Timer from './Timer'\nimport Tasks from './Tasks'\nimport './Trial.css'\n\nclass Try extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      answers: {},\n      timeSimple: 0,\n      timeHard: 0,\n\n      stage: 0,\n\n      ...props.current,\n    }\n  }\n\n  render() {\n    const { sec, stage, answers } = this.state\n    const { tasks } = this.props.current\n\n    return (\n      <div className=\"try\">\n        <Timer \n          sec={sec}\n          stage={stage}\n          onNextStage={this.handleNextStage}\n          onClose={this.handleClose}\n        />\n        <Tasks\n          stage={stage}\n          tasks={tasks}\n          answers={answers}\n          onSolved={this.handleSolved}\n          onProblem={this.handleProblem}\n          onAnswer={this.handleAnswer}\n        />\n      </div>\n    )\n  }\n\n  handleNextStage = (time, sec) => {\n    const { stage } = this.state\n\n    if (stage === 0) {\n      this.setState({\n        sec,\n        stage: 1,\n      })\n      return\n    }\n\n    if (stage === 1) {\n      this.setState({\n        sec,\n        stage: 2,\n        timeSimple: time,\n      })\n      return\n    }\n\n    this.setState({\n      sec,\n      stage: 3,\n      timeHard: time,\n    }, () => {\n      this.props.onFinish({\n        ...this.state\n      })\n    })\n  }\n\n  handleClose = () => {\n    const { onHide } = this.props\n    onHide()\n  }\n\n  handleSolved = (id) => {\n    const { current, onSolved } = this.props\n    const { tasks } = current\n\n    const ix = tasks.findIndex(t => t.id === id)\n \n    onSolved(ix)\n  }\n\n  handleProblem = (id) => {\n    const { onProblem } = this.props\n \n    onProblem(id)\n  }\n\n  handleAnswer = (id, value) => {\n    const { answers } = this.state\n\n    this.setState({\n      answers: {\n        ...answers,\n        [id]: value,\n      }\n    })\n  }\n}\n\nexport default Try\n","import React from 'react'\nimport Trial from './Trial'\nimport Tasks from './Tasks'\nimport tasksData from './tasks.json'\nimport './App.css'\n\nconst KEY = 'SCH2'\nconst read = () => {\n  return JSON.parse(localStorage.getItem(KEY))\n}\n\nconst save = (data = {}) => {\n  return localStorage.setItem(KEY, JSON.stringify(data))\n}\n\nconst shuffle = arr => {\n  const res = [...arr]\n  for (let i = res.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [res[i], res[j]] = [res[j], res[i]];\n  }\n  return res\n}\n\nconst generate = (tasks, problem) => {\n  const all = Object.values(tasks)\n\n  if (problem) {\n    return all.filter(t => !t.solved && t.problem)\n  }\n\n  const hard = all.filter(t => t.hard && !t.solved && !t.problem)\n  return shuffle(hard).slice(0, 10)\n}\n\nconst urlParams = new URLSearchParams(window.location.search)\nconst problem = urlParams.get('problem')\n\nclass App extends React.PureComponent {\n  state = {\n    version: 1,\n    ...(read() || tasksData),\n    current: null,\n  }\n\n  render() {\n    const { current } = this.state\n\n    return (\n      <div className=\"app\">\n \n        { current && (\n          <Trial\n            current={current}\n            onSolved={this.handleSolve}\n            onProblem={this.handleProblem}\n            onFinish={this.handleFinish}\n            onHide={this.handleHide}\n          />\n        ) }\n\n        { (!problem && !current) && (\n          <div>\n            <ul>\n              { (this.state.trials || []).map(trial => (\n                <li key={trial.id} onClick={() => this.handleShow(trial)} >\n                  {trial.id}: {(new Date(trial.ts)).toString()} \n                </li>\n              )) }\n            </ul>\n            <button className=\"button\" onClick={this.handleStart}> New </button>\n            <button className=\"button\" onClick={this.handleDowndload}> Download </button>\n          </div>\n        ) }\n\n        { Boolean(problem) && (\n          <Tasks\n            stage={1}\n            tasks={generate(this.state.tasks, true)}\n            answers={{}}\n            onSolved={() => {}}\n            onProblem={() => {}}\n            onAnswer={() => {}}\n          />\n        ) }\n          \n      </div>\n    )\n  }\n\n  handleShow = (trial) => {\n    this.setState({\n      current: trial,\n    })\n  }\n\n  handleHide = () => {\n    this.setState({\n      current: null,\n    })\n  }\n\n  handleSolve = (ix) => {\n    const { tasks, current } = this.state\n    const task = current.tasks[ix]\n    const curIds = current.tasks.map(t => t.id)\n    const nextTask = generate(tasks).filter(t => !curIds.includes(t.id))[0] || {}\n    const next = [ ...current.tasks ]\n    next[ix] = nextTask\n\n    this.setState({\n      tasks: {\n        ...tasks,\n        [task.id]: {\n          ...task,\n          solved: true,\n        },\n      },\n      current: {\n        ...current,\n        tasks: next,\n      },\n    })\n  }\n\n  handleProblem = (id) => {\n    const { current, tasks } = this.state\n\n    this.setState({\n      tasks: {\n        ...tasks,\n        [id]: {\n          ...tasks[id],\n          problem: true,\n        },\n      },\n    }, () => {\n      const next = current.tasks.map(t => this.state.tasks[t.id])\n      this.setState({\n        current: {\n          ...current,\n          tasks: next,\n        },\n      })\n    })\n  }\n\n  handleStart = () => {\n    const tasks = generate(this.state.tasks)\n    const id = Math.max(...(this.state.trials || [{ id: 0 }]).map(t => t.id)) + 1\n    const ts = Date.now()\n\n    this.setState({\n      current: {\n        id,\n        ts,\n        tasks,\n      },\n    })\n  }\n\n  handleFinish = (data) => {\n    const { current, trials } = this.state\n    const trial = { ...current, ...data }\n    this.setState({\n      current: null,\n      trials: [ ...(trials || []), trial ],\n    }, () => {\n      console.log(this.state)\n      save(this.state)\n    })\n  }\n\n  handleDowndload = () => {\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(this.state))\n    const downloadAnchorNode = document.createElement('a')\n    downloadAnchorNode.setAttribute('href', dataStr)\n    downloadAnchorNode.setAttribute('download', `sch2-local-data-${Date.now()}.json`)\n    document.body.appendChild(downloadAnchorNode)\n    downloadAnchorNode.click()\n    downloadAnchorNode.remove()\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}